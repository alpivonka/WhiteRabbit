package org.ohdsi.rabbitInAHat;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class ETLDocumentDialog extends JDialog {
    private JPanel contentPane;
    private JButton buttonOK;
    private JButton buttonCancel;
    private JCheckBox generateETLDocument;
    private JCheckBox generatePseudocodeSql;
    private JCheckBox sourceFillRatesCheckBox;
    private JCheckBox targetFillRatesCheckBox;
    DialogStatus etlDialogStatus = null;

    public ETLDocumentDialog(Window parentWindow) {

        super(parentWindow, "ETL Document Generation", ModalityType.MODELESS);
        this.setResizable(false);
        this.setLocation(parentWindow.getX() + parentWindow.getWidth() / 2, parentWindow.getY() + 100);

        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        buttonOK.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onOK();
            }
        });

        buttonCancel.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onCancel();
            }
        });

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onCancel();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    }

    private void onOK() {
        // add your code here
        etlDialogStatus = new DialogStatus();
        etlDialogStatus.setGenerateETLDocument(generateETLDocument.isSelected());
        etlDialogStatus.setGeneratePseudocodeSql(generatePseudocodeSql.isSelected());
        etlDialogStatus.setSourceFillRates(sourceFillRatesCheckBox.isSelected());
        etlDialogStatus.setTargetFillRates(targetFillRatesCheckBox.isSelected());
        etlDialogStatus.setOk(true);

        dispose();
    }

    private void onCancel() {
        // add your code here if necessary
        etlDialogStatus = new DialogStatus();
        etlDialogStatus.setOk(false);
        dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridBagLayout());
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        contentPane.add(panel1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel1.add(panel2, BorderLayout.CENTER);
        buttonOK = new JButton();
        buttonOK.setText("OK");
        panel2.add(buttonOK, BorderLayout.WEST);
        buttonCancel = new JButton();
        buttonCancel.setText("Cancel");
        panel2.add(buttonCancel, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPane.add(panel3, gbc);
        generateETLDocument = new JCheckBox();
        generateETLDocument.setSelected(true);
        generateETLDocument.setText("Generate ETL Document");
        generateETLDocument.setToolTipText("Generate ETL Document Word Doc");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel3.add(generateETLDocument, gbc);
        sourceFillRatesCheckBox = new JCheckBox();
        sourceFillRatesCheckBox.setText("Source Fill Rates");
        sourceFillRatesCheckBox.setToolTipText("Generate pesudocode SQL for source database field level fill rates.");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel3.add(sourceFillRatesCheckBox, gbc);
        targetFillRatesCheckBox = new JCheckBox();
        targetFillRatesCheckBox.setText("Target Fill Rates");
        targetFillRatesCheckBox.setToolTipText("Generate pesudocode SQL for target database field level fill rates.");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel3.add(targetFillRatesCheckBox, gbc);
        final JLabel label1 = new JLabel();
        label1.setFont(new Font(label1.getFont().getName(), label1.getFont().getStyle(), label1.getFont().getSize()));
        label1.setText("  Generate Pesudocode SQL ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel3.add(label1, gbc);
        generatePseudocodeSql = new JCheckBox();
        generatePseudocodeSql.setEnabled(true);
        generatePseudocodeSql.setSelected(false);
        generatePseudocodeSql.setText("Source To Target Mappings ");
        generatePseudocodeSql.setToolTipText("Generate pesudocode SQL for mapped tables and fields.");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel3.add(generatePseudocodeSql, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(6, 0, 0, 0);
        panel3.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(1, 3, 0, 3);
        panel3.add(spacer2, gbc);
        final JSeparator separator1 = new JSeparator();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel3.add(separator1, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }





   /* public static void main(String[] args) {
        ETLDocumentDialog dialog = new ETLDocumentDialog();
        dialog.pack();
        dialog.setVisible(true);
        System.exit(0);
    }
    */

}
